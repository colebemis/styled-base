// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`\`css\` prop evaluates theme keys prefixed with "$" 1`] = `
.c0 {
  display: inline-block;
  padding: 4px 8px;
  margin: -4px auto;
  color: #07f;
  background-color: $foo;
}

<div
  class="c0"
>
  Hello World
</div>
`;

exports[`\`css\` prop provides default breakpoints 1`] = `
.c0 {
  width: 100%;
}

@media screen and (min-width:576px) {
  .c0 {
    width: 90%;
  }
}

@media screen and (min-width:768px) {
  .c0 {
    width: 80%;
  }
}

@media screen and (min-width:992px) {
  .c0 {
    width: 70%;
  }
}

@media screen and (min-width:1200px) {
  .c0 {
    width: 60%;
  }
}

<div
  class="c0"
>
  Hello World
</div>
`;

exports[`\`css\` prop supports nesting 1`] = `
.c0 {
  box-sizing: border-box;
}

.c0 .foo {
  color: red;
}

.c0 *,
.c0 *::before,
.c0 *::after {
  box-sizing: inherit;
}

<div
  class="c0"
>
  Hello World
</div>
`;

exports[`\`css\` prop supports pseudo-classes and pseudo-elements 1`] = `
.c0 {
  color: red;
}

.c0:hover {
  color: blue;
}

.c0::before {
  content: "ðŸŒŽ";
}

<div
  class="c0"
>
  Hello World
</div>
`;

exports[`\`css\` prop supports responsive values 1`] = `
.c0 {
  width: 100%;
  padding: 0;
}

@media screen and (min-width:576px) {
  .c0 {
    width: 50%;
    padding: 4px;
    font-size: 12px;
  }
}

@media screen and (min-width:768px) {
  .c0 {
    padding: 8px;
  }
}

@media screen and (min-width:992px) {
  .c0 {
    padding: 16px;
    font-size: 14px;
  }
}

<div
  class="c0"
>
  Hello World
</div>
`;

exports[`accepts a \`css\` prop 1`] = `
.c0 {
  color: red;
}

<div
  class="c0"
>
  Hello World
</div>
`;

exports[`accepts a \`theme\` prop 1`] = `
.c0 {
  color: #07f;
}

<div
  class="c0"
>
  Hello World
</div>
`;

exports[`accepts an \`as\` prop to change the rendered DOM element 1`] = `
<span
  class=""
>
  Hello World
</span>
`;
